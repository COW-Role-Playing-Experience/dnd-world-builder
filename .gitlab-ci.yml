# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - lint
  - build
  - test
  - deploy

lint:
  stage: lint
  image: $CI_REGISTRY_IMAGE/ci:lint
  tags:
    - shell
  variables:
    PRE_COMMIT_HOME: ${CI_PROJECT_DIR}/.cache/pre-commit
  cache:
    paths:
      - ${PRE_COMMIT-HOME}
  script:
    - pre-commit run --all-files

build:
  stage: build
  image: $CI_REGISTRY_IMAGE/ci:build
  tags:
    - shell
  script:
    - dotnet build

deploy_win:
  stage: deploy
  image: $CI_REGISTRY_IMAGE/ci:deploy
  tags:
    - shell
  # Set the deploy jobs to manual since each the pipeline runs, the artifacts will take up too much space
  when: manual
  script:
    # Build for windows
    - dotnet publish ${CI_PROJECT_DIR}/UI/UI.csproj -c Release -r win-x64 --self-contained true
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    paths:
      - "UI/bin/Release/net7.0/win-x64/publish/"

deploy_linux:
  stage: deploy
  image: $CI_REGISTRY_IMAGE/ci:deploy
  tags:
    - shell
  when: manual
  script:
    # Build for Linux
    - dotnet publish ${CI_PROJECT_DIR}/UI/UI.csproj -c Release -r linux-x64 --self-contained true
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    paths:
      - "UI/bin/Release/net7.0/linux-x64/publish/"